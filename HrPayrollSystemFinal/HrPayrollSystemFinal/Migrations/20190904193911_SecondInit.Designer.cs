// <auto-generated />
using System;
using HrPayrollSystemFinal.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HrPayrollSystemFinal.Migrations
{
    [DbContext(typeof(HrPrSystemDbContext))]
    [Migration("20190904193911_SecondInit")]
    partial class SecondInit
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HrPayrollSystemFinal.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("RoleId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider");

                    b.Property<string>("ProviderKey");

                    b.Property<string>("ProviderDisplayName");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("LoginProvider");

                    b.Property<string>("Name");

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("HrPayrollSystemFinal.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("HrPayrollSystemFinal.Models.Continuity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("ReasonId");

                    b.Property<int>("Status");

                    b.Property<int>("WorkerId");

                    b.HasKey("Id");

                    b.HasIndex("ReasonId");

                    b.HasIndex("WorkerId");

                    b.ToTable("Continuities");
                });

            modelBuilder.Entity("HrPayrollSystemFinal.Models.CurrentWorkPlace", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyId");

                    b.Property<int>("DepartmentId");

                    b.Property<DateTime>("EntryDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("ExitDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("PositionId");

                    b.Property<int>("ShopId");

                    b.Property<int>("WorkerId");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("PositionId");

                    b.HasIndex("ShopId");

                    b.HasIndex("WorkerId");

                    b.ToTable("CurrentWorkPlaces");
                });

            modelBuilder.Entity("HrPayrollSystemFinal.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CompanyId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("HrPayrollSystemFinal.Models.Payroll", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyId");

                    b.Property<int>("DepartmentId");

                    b.Property<int>("PositionId");

                    b.Property<decimal>("TotalSalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("WorkerId");

                    b.Property<int>("WorkerPromotionId");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("PositionId");

                    b.HasIndex("WorkerId");

                    b.HasIndex("WorkerPromotionId");

                    b.ToTable("Payrolls");
                });

            modelBuilder.Entity("HrPayrollSystemFinal.Models.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DepartmentId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("HrPayrollSystemFinal.Models.PreviousWorkPlace", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EntryDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime>("ExitDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("ReasonOfTermination")
                        .IsRequired();

                    b.Property<string>("WorkPlaceName")
                        .IsRequired();

                    b.Property<int>("WorkerId");

                    b.HasKey("Id");

                    b.HasIndex("WorkerId");

                    b.ToTable("PreviousWorkPlaces");
                });

            modelBuilder.Entity("HrPayrollSystemFinal.Models.Reason", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ReasonName")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<bool>("ReasonType")
                        .HasMaxLength(150);

                    b.HasKey("Id");

                    b.ToTable("Reasons");
                });

            modelBuilder.Entity("HrPayrollSystemFinal.Models.Shop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CompanyId");

                    b.Property<int?>("DepartmentId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Shops");
                });

            modelBuilder.Entity("HrPayrollSystemFinal.Models.ShopPromotion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("FinishDate")
                        .HasColumnType("smalldatetime");

                    b.Property<decimal>("MaxAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MinAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Reward")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("ShopId");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("smalldatetime");

                    b.HasKey("Id");

                    b.HasIndex("ShopId");

                    b.ToTable("ShopPromotions");
                });

            modelBuilder.Entity("HrPayrollSystemFinal.Models.Vacation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("VacationEnded")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime>("VacationStarted")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("WorkerId");

                    b.HasKey("Id");

                    b.HasIndex("WorkerId");

                    b.ToTable("Vacations");
                });

            modelBuilder.Entity("HrPayrollSystemFinal.Models.Worker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BirthdayDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CurrentAdress")
                        .IsRequired()
                        .HasMaxLength(300);

                    b.Property<string>("DistrictRegistration")
                        .IsRequired()
                        .HasMaxLength(300);

                    b.Property<int>("EducationType");

                    b.Property<string>("FatherName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int>("Gender");

                    b.Property<int>("MartialStatus");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<DateTime>("PassportExpirationDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("PassportNumber")
                        .IsRequired()
                        .HasMaxLength(300);

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Workers");
                });

            modelBuilder.Entity("HrPayrollSystemFinal.Models.WorkerPromotion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Reward")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("WorkerId");

                    b.HasKey("Id");

                    b.HasIndex("WorkerId");

                    b.ToTable("WorkerPromotions");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("HrPayrollSystemFinal.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("HrPayrollSystemFinal.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HrPayrollSystemFinal.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("HrPayrollSystemFinal.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HrPayrollSystemFinal.Models.Continuity", b =>
                {
                    b.HasOne("HrPayrollSystemFinal.Models.Reason", "Reason")
                        .WithMany("Continuities")
                        .HasForeignKey("ReasonId");

                    b.HasOne("HrPayrollSystemFinal.Models.Worker", "Worker")
                        .WithMany("Continuities")
                        .HasForeignKey("WorkerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HrPayrollSystemFinal.Models.CurrentWorkPlace", b =>
                {
                    b.HasOne("HrPayrollSystemFinal.Models.Company", "Company")
                        .WithMany("CurrentWorkPlaces")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HrPayrollSystemFinal.Models.Department", "Department")
                        .WithMany("CurrentWorkPlaces")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HrPayrollSystemFinal.Models.Position", "Position")
                        .WithMany("CurrentWorkPlaces")
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HrPayrollSystemFinal.Models.Shop", "Shop")
                        .WithMany("CurrentWorkPlaces")
                        .HasForeignKey("ShopId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HrPayrollSystemFinal.Models.Worker", "Worker")
                        .WithMany("CurrentWorkPlaces")
                        .HasForeignKey("WorkerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HrPayrollSystemFinal.Models.Department", b =>
                {
                    b.HasOne("HrPayrollSystemFinal.Models.Company", "Company")
                        .WithMany("Departments")
                        .HasForeignKey("CompanyId");
                });

            modelBuilder.Entity("HrPayrollSystemFinal.Models.Payroll", b =>
                {
                    b.HasOne("HrPayrollSystemFinal.Models.Company", "Company")
                        .WithMany("Payrolls")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HrPayrollSystemFinal.Models.Department", "Department")
                        .WithMany("Payrolls")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HrPayrollSystemFinal.Models.Position", "Position")
                        .WithMany("Payrolls")
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HrPayrollSystemFinal.Models.Worker", "Worker")
                        .WithMany("Payrolls")
                        .HasForeignKey("WorkerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HrPayrollSystemFinal.Models.WorkerPromotion", "WorkerPromotion")
                        .WithMany()
                        .HasForeignKey("WorkerPromotionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HrPayrollSystemFinal.Models.Position", b =>
                {
                    b.HasOne("HrPayrollSystemFinal.Models.Department", "Department")
                        .WithMany("Positions")
                        .HasForeignKey("DepartmentId");
                });

            modelBuilder.Entity("HrPayrollSystemFinal.Models.PreviousWorkPlace", b =>
                {
                    b.HasOne("HrPayrollSystemFinal.Models.Worker", "Worker")
                        .WithMany("PreviousWorkPlaces")
                        .HasForeignKey("WorkerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HrPayrollSystemFinal.Models.Shop", b =>
                {
                    b.HasOne("HrPayrollSystemFinal.Models.Company", "Company")
                        .WithMany("Shops")
                        .HasForeignKey("CompanyId");

                    b.HasOne("HrPayrollSystemFinal.Models.Department", "Department")
                        .WithMany("Shops")
                        .HasForeignKey("DepartmentId");
                });

            modelBuilder.Entity("HrPayrollSystemFinal.Models.ShopPromotion", b =>
                {
                    b.HasOne("HrPayrollSystemFinal.Models.Shop", "Shop")
                        .WithMany("ShopPromotions")
                        .HasForeignKey("ShopId");
                });

            modelBuilder.Entity("HrPayrollSystemFinal.Models.Vacation", b =>
                {
                    b.HasOne("HrPayrollSystemFinal.Models.Worker", "Worker")
                        .WithMany("Vacations")
                        .HasForeignKey("WorkerId");
                });

            modelBuilder.Entity("HrPayrollSystemFinal.Models.WorkerPromotion", b =>
                {
                    b.HasOne("HrPayrollSystemFinal.Models.Worker", "Worker")
                        .WithMany("WorkerPromotions")
                        .HasForeignKey("WorkerId");
                });
#pragma warning restore 612, 618
        }
    }
}
